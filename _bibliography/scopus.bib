@CONFERENCE{KDD2025,
	author = {Antelmi, Alessia and  Cordasco, Gennaro and De Vinco, Daniele and Di Pasquale, Valerio and Polato, Mirko and Spagnuolo, Carmine},
	title = {Hypergraph Motifs Representation Learning},
	year = {2025},
	journal = {31st SIGKDD Conference on Knowledge Discovery and Data Mining - Research Track (Accepted at August 2024 Deadline)},
	type = {Conference paper},
	bibtex_show={true},
    selected={true},
	abbr={KDD},
	sjr = {<a href="https://portal.core.edu.au/conf-ranks/26/"><img border="0" src="https://img.shields.io/badge/Core'23-A*-blue.svg" alt="Core'23-A*"  /></a>},
}
@CONFERENCE{Citro2024223,
	author = {Citro, Tiziano and Pellegrino, Maria Angela and Scarano, Vittorio and Spagnuolo, Carmine},
	title = {As a Grain of Link: How Far Should We Take Link Granularity},
	year = {2024},
	journal = {HT 2024: Creative Intelligence - 35th ACM Conference on Hypertext and Social Media},
	pages = {223 – 229},
	doi = {10.1145/3648188.3675146},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85204894237&doi=10.1145%2f3648188.3675146&partnerID=40&md5=e632c2740be8cac58535511162c76172},
	type = {Conference paper},
	bibtex_show={true}
}
@CONFERENCE{De Vinco202452,
	author = {De Vinco, Daniele and Tranquillo, Andrea and Antelmi, Alessia and Spagnuolo, Carmine and Scarano, Vittorio},
	title = {High-Performance Computation on a Rust-based distributed ABM engine},
	year = {2024},
	journal = {CEUR Workshop Proceedings},
	volume = {3785},
	pages = {52 – 60},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85207528846&partnerID=40&md5=699aacfc977fd5e81c134957cef9ba1b},
	type = {Conference paper},
	bibtex_show={true}
}
@INPROCEEDINGS{Pellegrino202138,
	author = {Pellegrino, Maria Angela and Santoro, Mario and Scarano, Vittorio and Spagnuolo, Carmine},
	title = {Automatic Skill Generation for Knowledge Graph Question Answering},
	year = {2021},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {12739 LNCS},
	pages = {38 – 43},
	doi = {10.1007/978-3-030-80418-3_7},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85115874952&doi=10.1007%2f978-3-030-80418-3_7&partnerID=40&md5=9e7e650f7583967f757c9b27bcc47262},
	abstract = {Knowledge Graphs are a critical source for Question Answering, but their potential may be threatened due to the complexity of their query languages, such as SPARQL. On the opposite side, Virtual Assistants have witnessed an extraordinary interest as they enable users to pose questions in natural language. Many companies and researchers have combined Knowledge Graphs and Virtual Assistants, but no one has provided end-users with a generic methodology to generate extensions for automatically querying knowledge graphs. Thus, we propose a community shared software framework to create custom extensions to query knowledge graphs by virtual assistants, unlocking the potentialities of the Semantic Web technologies by bringing knowledge graphs in the “pocket” of everyone, accessible from smartphones or smart speakers. © 2021, Springer Nature Switzerland AG.},
	author_keywords = {Knowledge Graphs; Question Answering; Software framework; Virtual Assistant},
	keywords = {Computer programming; Graphic methods; Natural language processing systems; Query languages; End-users; Knowledge graphs; Natural languages; Question Answering; Semantic Web technology; Smart phones; Software frameworks; Virtual assistants; Knowledge graph},
	publisher = {Springer Science and Business Media Deutschland GmbH},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}
}

@INPROCEEDINGS{Antelmi20231218,
	author = {Antelmi, Alessia and Cordasco, Gennaro and De Vinco, Daniele and Spagnuolo, Carmine},
	title = {The Age of Snippet Programming: Toward Understanding Developer Communities in Stack Overflow and Reddit},
	year = {2023},
	journal = {ACM Web INPROCEEDINGS 2023 - Companion of the World Wide Web INPROCEEDINGS, WWW 2023},
	pages = {1218 – 1224},
	doi = {10.1145/3543873.3587673},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85159598375&doi=10.1145%2f3543873.3587673&partnerID=40&md5=1e0a1b467d388a04d68d37c6882478ec},
	abstract = {Today, coding skills are among the most required competencies worldwide, often also for non-computer scientists. Because of this trend, community contribution-based, question-and-answer (Q&A) platforms became prominent for finding the proper solution to all programming issues. Stack Overflow has been the most popular platform for technical-related questions for years. Still, recently, some programming-related subreddits of Reddit have become a standing stone for questions and discussions. This work investigates the developers' behavior and community formation around the twenty most popular programming languages. We examined two consecutive years of programming-related questions from Stack Overflow and Reddit, performing a longitudinal study on users' posting activity and their high-order interaction patterns abstracted via hypergraphs. Our analysis highlighted crucial differences in how these Q&A platforms are utilized by their users. In line with previous literature, it emphasized the constant decline of Stack Overflow in favor of more community-friendly platforms, such as Reddit, which has been growing rapidly lately.  © 2023 ACM.},
	author_keywords = {Developer communities; Hypergraphs; Network Analysis; Q&A social platforms; Reddit; Stack Overflow; User behavior},
	keywords = {Graph theory; Coding skills; Computer scientists; Developer community; Hyper graph; Popular platform; Proper solutions; Question-and-answer social platform; Reddit; Stack overflow; User behaviors; Behavioral research},
	publisher = {Association for Computing Machinery, Inc},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@INPROCEEDINGS{Borrazzo2021,
	author = {Borrazzo, Mauro and D’Ambrosio, Giuseppe and Scarano, Vittorio and Spagnuolo, Carmine},
	title = {TraceMeNow: an Open-Source Software Framework for Indoor Localization Applications},
	year = {2021},
	journal = {CEUR Workshop Proceedings},
	volume = {3097},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85126627686&partnerID=40&md5=786dd2ec11da83ac7ee6fe0ee328ec81},
	abstract = {The increased number of smartphone-connected devices and the pervasive presence of sensors enabled the application of localization and tracking technologies in multiple contexts. Health, customer care, traveling, crowd management are just some of the possible fields where an Indoor Positioning System could be useful. Despite the effort of the research community, the integration of an Indoor Positioning System within an application is still difficult since it requires expertise in diverse fields like communication technologies, localization techniques, and hardware. This paper presents TraceMeNow, an open-source framework for developing applications comprising an Indoor Positioning System based on Bluetooth Low Energy and low-cost hardware. TraceMeNow is designed to improve developers’ experience without requiring specific knowledge to be used, thus aiming to be a simple and valuable tool suitable for different situations and accessible to any developer. TraceMeNow adopts a modular architecture enhancing the interoperability between components and supporting the developer throughout all the implementation phases. We aim to show the flexibility and ease of use of our framework by presenting an application to address a real-world use case. TraceMeNow aims to reduce the cost and the effort needed to create an application comprising an Indoor Positioning System, providing the basis for all the components and relying on mainstream technologies for hardware and communication. Moreover, TraceMeNow allows developers exploiting cloud computing when facing large scenarios with specific requirements such as high scalability and reliability, maintaining the same ease of use since the interaction with the provider is entirely abstracted. © 2021 Copyright for this paper by its authors.},
	author_keywords = {Bluetooth Low Energy; Indoor Localization; Indoor Positioning System},
	keywords = {Application programs; Computer programming; Indoor positioning systems; Open source software; Open systems; Bluetooth low energy; Ease-of-use; Indoor localization; Localization and tracking; Localization technologies; Lower energies; Open-source softwares; Smart phones; Software frameworks; Tracking technology; Bluetooth},
	publisher = {CEUR-WS},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@ARTICLE{Carillo2017322,
	author = {Carillo, Michele and Cordasco, Gennaro and Serrapica, Flavio and Spagnuolo, Carmine and Szufel, Przemysaw and Vicidomini, Luca},
	title = {D-MASON on the cloud: An experience with amazon web services},
	year = {2017},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {10104 LNCS},
	pages = {322 – 333},
	doi = {10.1007/978-3-319-58943-5_26},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85020380521&doi=10.1007%2f978-3-319-58943-5_26&partnerID=40&md5=dae39e9d9b966230a14122540e2898a9},
	abstract = {D-Mason framework is a parallel version of the Mason library for writing and running Agent-based simulations – a class of models that, by simulating the behavior of multiple agents, aims to emulate and/or predict complex phenomena. D-Mason has been conceived to harness the amount of unused computing power available in common installations like educational laboratory. Then the focus moved to dedicated installation, such as massively parallel machines or supercomputing centers. In this paper, D-Mason takes another step forward and now it canbeusedonacloudenvironment. The goal of the paper is twofold. Firstly, we are going to present D-Mason on the cloud – a D-Mason extension that, starting from an IaaS (Infrastructure as a Service) abstraction, and exploiting Amazon Web Services and StarCluster, provides a SIMulation-as-a-Service (SIMaaS) abstraction that simplifies the process of setting up and running distributed simulations in the cloud. Secondly, an additional goal of the paper is to assess computational and economic efficiency of running distributed multi-agent simulations on the Amazon Web Services EC2 instances. The computational speed and costs of an EC2 cluster will be compared against an on-site HPC cluster. © Springer International Publishing AG 2017.},
	author_keywords = {agent-based simulation models; Cloud computing; D-MASON; Distributed systems; High performance computing; Parallel computing},
	keywords = {Abstracting; Cloud computing; Computational efficiency; Distributed computer systems; Infrastructure as a service (IaaS); Multi agent systems; Parallel processing systems; Systems analysis; Websites; Agent-based simulation models; Distributed simulations; Distributed systems; Educational laboratory; High performance computing; Massively parallel machine; Multi agent simulation; Supercomputing centers; Web services},
	publisher = {Springer Verlag},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@ARTICLE{Antelmi2015367,
	author = {Antelmi, Alessia and Cordasco, Gennaro and Spagnuolo, Carmine and Vicidomini, Luca},
	title = {On evaluating graph partitioning algorithms for distributed agent based models on networks},
	year = {2015},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {9523},
	pages = {367 – 378},
	doi = {10.1007/978-3-319-27308-2_30},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84952042092&doi=10.1007%2f978-3-319-27308-2_30&partnerID=40&md5=2aac0fe2f5cbbe70c475d43758ecb7ba},
	abstract = {Graph Partitioning is a key challenge problem with application in many scientific and technological fields. The problem is very well studied with a rich literature and is known to be NP-hard. Several heuristic solutions, which follow diverse approaches, have been proposed, they are based on different initial assumptions that make them difficult to compare. An analytical comparison was performed based on an Implementation Challenge [3], however being a multi-objective problem (two opposing goals are for instance load balancing and edge-cut size), the results are difficult to compare and it is hard to foresee what can be the impact of one solution, instead of another, in a real scenario. In this paper we analyze the problem in a real context: the development of a distributed agent-based simulation model on a network field (which for instance can model social interactions). We present an extensive evaluation of the most efficient and effective solutions for the balanced k-way partitioning problem. We evaluate several strategies both analytically and on real distributed simulation settings (D-Mason). Results show that, a good partitioning strategy strongly influences the performances of the distributed simulation environment. Moreover, we show that there is a strong correlation between the edge-cut size and the real performances. Analyzing the results in details we were also able to discover the parameters that need to be optimized for best performances on networks in ABMs. © Springer International Publishing Switzerland 2015.},
	author_keywords = {Agent-Based Simulation Models; D-Mason; Distributed systems; Graph partitioning; High performance Computing; Parallel computing},
	keywords = {Algorithms; Autonomous agents; Computational methods; Graph theory; Network management; Parallel processing systems; Agent-based simulation models; Distributed simulation environments; Distributed systems; Graph Partitioning; Graph partitioning algorithms; High performance computing; Multi-objective problem; Partitioning strategies; Distributed computer systems},
	publisher = {Springer Verlag},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}
,
	note = {All Open Access, Bronze Open Access}
}

@ARTICLE{Cordasco2020531,
	author = {Cordasco, Gennaro and D’Auria, Matteo and Negro, Alberto and Scarano, Vittorio and Spagnuolo, Carmine},
	title = {FLY: A Domain-Specific Language for Scientific Computing on FaaS},
	year = {2020},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {11997 LNCS},
	pages = {531 – 544},
	doi = {10.1007/978-3-030-48340-1_41},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85086221836&doi=10.1007%2f978-3-030-48340-1_41&partnerID=40&md5=d704a7ded929ee5a794d63e50f72899e},
	abstract = {Cloud Computing is widely recognized as distributed computing paradigm for the next generation of dynamically scalable applications. Recently a novel service model, called Function-as-a-Service (FaaS), has been proposed, that enables users to exploit the computational power of cloud infrastructures, without the need to configure and manage complex computations systems. FaaS paradigm represents an opportunity to easily develop and execute extreme-scale applications as it allows fine-grain decomposition of the application with a much more efficient scheduling on cloud provider infrastructure. We introduce fly, a domain-specific language for designing, deploying and executing scientific computing applications by exploiting the FaaS service model on different cloud infrastructures. In this paper, we present the design and the language definition of fly on several computing (local and FaaS) back-ends: Symmetric multiprocessing (SMP), Amazon AWS Lambda, Microsoft Azure Functions, Google Cloud Functions, and IBM Bluemix/Apache OpenWhisk. We also present the first fly source-to-source compiler, publicly available on GitHub, which supports SMP and AWS back-ends. © 2020, Springer Nature Switzerland AG.},
	author_keywords = {Distributed computing; Domain-Specific Languages; Functions as a Service (FaaS); Parallel computing; Scientific computing; Serverless computing},
	keywords = {Platform as a Service (PaaS); Windows operating system; Cloud infrastructures; Cloud providers; Complex computation; Computational power; Domain specific languages; Efficient scheduling; Scientific computing applications; Symmetric multi processing; Problem oriented languages},
	publisher = {Springer},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@ARTICLE{Antelmi201915,
	author = {Antelmi, Alessia and Cordasco, Gennaro and D’Auria, Matteo and De Vinco, Daniele and Negro, Alberto and Spagnuolo, Carmine},
	title = {On Evaluating Rust as a Programming Language for the Future of Massive Agent-Based Simulations},
	year = {2019},
	journal = {Communications in Computer and Information Science},
	volume = {1094},
	pages = {15 – 28},
	doi = {10.1007/978-981-15-1078-6_2},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85075680624&doi=10.1007%2f978-981-15-1078-6_2&partnerID=40&md5=745d6c8004d20a2189b52840d8942720},
	abstract = {The analysis of real systems and the development of predictive models to describe the evolution of real phenomena are challenging tasks that can improve the design of methodologies in many research fields. In this context, Agent-Based Model (ABM) can be seen as an innovative tool for modelling real-world complex simulations. This paper presents Rust-AB, an open-source library for developing ABM simulation on sequential and/or parallel computing platforms, exploiting Rust as programming language. The Rust-AB architecture as well as an investigation on the ability of Rust to develop ABM simulations are discussed. An ABM simulation written in Rust-AB, and a performance comparison against the well-adopted Java ABM toolkit MASON is also presented. © 2019, Springer Nature Singapore Pte Ltd.},
	author_keywords = {Agent-Based Model; Framework; Rust language; Simulation},
	keywords = {Autonomous agents; Computational methods; Computer simulation languages; Open source software; Open systems; Agent based simulation; Agent-based model; Framework; Open-source libraries; Parallel computing platform; Performance comparison; Rust language; Simulation; Simulation platform},
	publisher = {Springer},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@INPROCEEDINGS{Cordasco2017242,
	author = {Cordasco, Gennaro and De Donato, Renato and Malandrino, Delfina and Palmieri, Giuseppina and Petta, Andrea and Pirozzi, Donato and Santangelo, Gianluca and Scarano, Vittorio and Serra, Luigi and Spagnuolo, Carmine and Vicidomini, Luca},
	title = {Engaging Citizens with a Social Platform for Open Data},
	year = {2017},
	journal = {ACM International INPROCEEDINGS Proceeding Series},
	volume = {Part F128275},
	pages = {242 – 249},
	doi = {10.1145/3085228.3085302},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85023619143&doi=10.1145%2f3085228.3085302&partnerID=40&md5=5f4182a15c21f796d8205b495c741baf},
	abstract = {Open Data are valuable initiatives in favour of transparency. Public administrations are increasing the availability of datasets for citizens, associations, innovators and other stakeholders, by releasing their data with open licenses. Open initiatives are achieving less success than expected, mainly due to the lack of engagement. There is a growing demand for approaches to actively engage citizens in exploiting Open Data. This paper introduces SPOD, a Social Platform for Open Data, which aims to engage citizens, local associations and organizations in forming communities of interests, stimulating the interpretation of Open Data and exploiting their use in Data-driven discussions, something not well-supported on traditional social networks. Social collaboration is the key aspect to increase the public value, where citizens participate in the discussions, co-create knowledge and data. The paper describes the engagement of four communities of citizens, which contributed to the public value by discussing topics in the context of Cultural Heritage, generating information from existing and co-created open datasets, by using SPOD. © 2017 ACM.},
	author_keywords = {Case study; E-participation; Open data; Open government},
	keywords = {Computer applications; Computer programming; Communities of interest; Cultural heritages; E-participation; Growing demand; Open datum; Open government; Open license; Public values; Public administration},
	publisher = {Association for Computing Machinery},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@ARTICLE{Lettieri2015379,
	author = {Lettieri, Nicola and Spagnuolo, Carmine and Vicidomini, Luca},
	title = {Distributed agent-based simulation and GIS: An experiment with the dynamics of social norms},
	year = {2015},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {9523},
	pages = {379 – 391},
	doi = {10.1007/978-3-319-27308-2_31},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84952044891&doi=10.1007%2f978-3-319-27308-2_31&partnerID=40&md5=265f6c3b7b5baabe84a56ee7193c1e77},
	abstract = {In the last decade, the investigation of the social complexity has witnessed the rise of Computational Social Science, a research paradigm that heavily relies upon data and computation to foster our understanding of social phenomena. In this field, a key role is played by the explanatory and predictive power of agent-based social simulations that are showing to take advantage of GIS, higher number of agents and real data. We focus GIS based distibuted ABMs. We observed that the density distribution of agents, over the field, strongly impact on the overall performances. In order to better understand this issue, we analyzes three different scenarios ranging from real positioning, where the citizens are positioned according to a real dataset to a random positioning where the agent are positioned uniformly at random on the field. Results confirm our hypothesis and show that an irregular distribution of the agents over the field increases the communication overhead. We provide also an analytic analysis which, in a 2-dimensional uniform field partitioning, is affected by several parameters (which depend on the model), but is also influenced by the density distribution of agents over the field. According to the presented results, we have that uniform space partitioning strategy does not scale on GIS based ABM characterized by an irregular distribution of agents. © Springer International Publishing Switzerland 2015.},
	author_keywords = {ABM; D-Mason; Distributed agent-based social simulation; Distributed systems; GIS; GIS; Parallel computing},
	keywords = {Geographic information systems; Parallel processing systems; ABM; Agent based social simulation; Communication overheads; Computational social science; Density distributions; Distributed agents; Distributed systems; Random positioning; Distributed computer systems},
	publisher = {Springer Verlag},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@INPROCEEDINGS{Carillo2019,
	author = {Carillo, Michele and D'Auria, Matteo and Serrapica, Flavio and Spagnuolo, Carmine and Caligaris, Carlo and Fabiano, Marcello},
	title = {Large-scale Optimized Searching for Cruise Itinerary Scheduling on the Cloud},
	year = {2019},
	journal = {2019 International INPROCEEDINGS on Optimization and Applications, ICOA 2019},
	doi = {10.1109/ICOA.2019.8727704},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85068068597&doi=10.1109%2fICOA.2019.8727704&partnerID=40&md5=8de56ae50863056bc12e9aa3c8806acb},
	abstract = {We consider the Cruise Itinerary Schedule Design (CISD) problem, which consists in identifying a cruise itinerary in order to optimize the payoff of a cruising company. To deal with this problem we present an optimization strategy based on a parameters optimization process. We exploits the Simulation exploration and Optimization Framework for the cloud (SOF) for building our computing intensive process on a cloud computing infrastructure. The optimization process is based on a heuristic tabu-search strategy, which computes and evaluates the cruise schedule and a genetic algorithm that optimizes the parameters of the heuristic search. We have evaluated the proposed solution in terms of quality as well as the scalability/cost efficiency on the cloud infrastructure Amazon Web Services. © 2019 IEEE.},
	author_keywords = {Cloud Computing; Cruise Itinerary Schedule Design; Distributed Computing; Optimization; Parameters Space Exploration; Transportation Logistics.},
	keywords = {Cloud computing; Distributed computer systems; Genetic algorithms; Heuristic algorithms; Optimization; Quality control; Space research; Tabu search; Web services; Amazon web services; Cloud computing infrastructures; Cloud infrastructures; Optimization framework; Optimization strategy; Parameters optimization; Space explorations; Transportation-logistics; Parameter estimation},
	publisher = {Institute of Electrical and Electronics Engineers Inc.},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@ARTICLE{Accardo2023149,
	author = {Accardo, Alberto and Monaco, Daniele and Pellegrino, Maria Angela and Scarano, Vittorio and Spagnuolo, Carmine},
	title = {VRKG-CollaborativeExploration - Data-Driven Discussions in the Metaverse},
	year = {2023},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {13998 LNCS},
	pages = {149 – 153},
	doi = {10.1007/978-3-031-43458-7_28},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85175989563&doi=10.1007%2f978-3-031-43458-7_28&partnerID=40&md5=0768e27c6b42c403209e5ab46ecabeaf},
	abstract = {The metaverse is an immersive, multi-user, virtual world where humans, represented by avatars, can entertain, socialize, and collaborate. This demo proposes VRKG-CollaborativeExploration, a Virtual Reality application that enables users to join thematic and collaborative data-driven discussions in the social metaverse where data are retrieved from Knowledge Graphs via SPARQL queries. © The Author(s), under exclusive license to Springer Nature Switzerland AG. 2023.},
	author_keywords = {Collaboration; Exploration; Knowledge Graph; SPARQL queries; Virtual reality},
	keywords = {Semantic Web; Virtual reality; Collaboration; Data driven; Immersive; Knowledge graphs; Metaverses; Multiusers; SPARQL query; Virtual worlds; Knowledge graph},
	publisher = {Springer Science and Business Media Deutschland GmbH},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@ARTICLE{Cordasco2014533,
	author = {Cordasco, Gennaro and Mancuso, Ada and Milone, Francesco and Spagnuolo, Carmine},
	title = {Communication strategies in distributed agent-based simulations: The experience with D-Mason},
	year = {2014},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {8374 LNCS},
	pages = {533 – 543},
	doi = {10.1007/978-3-642-54420-0_52},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958539488&doi=10.1007%2f978-3-642-54420-0_52&partnerID=40&md5=41e8d255f80097dea0e9c8d7ebe4e615},
	abstract = {Agent-Based simulation Models (ABMs) are a very powerful experimental tool of analysis, used in many scientific and technological communities of researchers, to assess and predict the dynamic unfolding of a series of events or processes, according to the imposition of certain conditions, given by the analyst. The computing power usually represents a limit for such simulations and the traditional answer to the need for computing power is to invest in computer resources. D-Mason is a framework for parallelizing simulations developed on top of Mason toolkit. The goal of D-Mason is to exploit wasted computing power in a network of computers, eventually heterogeneous, as a research lab or a cluster of workstation. In this paper we present a novel communication strategy using Publish/ Subscribe paradigm through a layer based on the MPI Standard. © 2014 Springer-Verlag Berlin Heidelberg.},
	author_keywords = {Agent-based simulation models; D-Mason; Distributed Systems; High Performance Computing; Mason; MPI; Parallel Computing; Publish/Subscribe},
	keywords = {Computer workstations; Parallel architectures; Parallel processing systems; Agent-based simulation models; D-Mason; Distributed systems; High performance computing; Mason; MPI; Publish/subscribe; Communication},
	publisher = {Springer Verlag},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}
,
	note = {All Open Access, Bronze Open Access}
}

@INPROCEEDINGS{Cordasco2013385,
	author = {Cordasco, Gennaro and De Chiara, Rosario and Raia, Francesco and Scarano, Vittorio and Spagnuolo, Carmine and Vicidomini, Luca},
	title = {Designing computational steering facilities for distributed agent based simulations},
	year = {2013},
	journal = {SIGSIM-PADS 2013 - Proceedings of the 2013 ACM SIGSIM Principles of Advanced Discrete Simulation},
	pages = {385 – 390},
	doi = {10.1145/2486092.2486147},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878644426&doi=10.1145%2f2486092.2486147&partnerID=40&md5=c80aa9afc3ea7ec4ce0a831f710b389b},
	abstract = {Agent-Based Models (ABMs) are a class of models which, by simulating the behavior of multiple agents (i.e., ndependent actions, interactions and adaptation), aim to emulate and/or predict complex phenomena. One of the general features of ABM simulations is their experimental capacity, that requires a viable and reliable infrastructure to interact with a running simulation, monitoring its behaviour, as it proceeds, and applying changes to the configurations at run time, (the computational steering) in order to study "what if" scenarios. A common approach for improving the efficiency and the effectiveness of ABMs as a research tool is to distribute the overall computation on a number of machines, which makes the computational steering of the simulation particularly challenging. In this paper, we present the principles and the architecture design of the management and control infrastructure that is available in D-Mason, a framework for implementing distributed ABM simulations. Together with an efficient parallel distribution of the simulation tasks, D-Mason offers a number of facilities to support the computational steering of a simulation, i.e. monitoring and interacting with a running distributed simulation. © 2013 ACM.},
	author_keywords = {agent-based simulation; computational steering; distributed systems; visualization of distributed models},
	keywords = {Circuit simulation; Agent based simulation; Architecture designs; Computational steering; Distributed simulations; Distributed systems; Management and controls; Parallel distribution; Visualization of distributed models; Software engineering},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@ARTICLE{Pellegrino2022323,
	author = {Pellegrino, Maria Angela and Scarano, Vittorio and Spagnuolo, Carmine},
	title = {Move cultural heritage knowledge graphs in everyone's pocket},
	year = {2022},
	journal = {Semantic Web},
	volume = {14},
	number = {2},
	pages = {323 – 359},
	doi = {10.3233/SW-223117},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85145942403&doi=10.3233%2fSW-223117&partnerID=40&md5=0cdd145907a7578df68d0c09db99614c},
	abstract = {Last years witnessed a shift from the potential utility in digitisation to a crucial need to enjoy activities virtually. In fact, before 2019, data curators recognised the utility of performing data digitisation, while during the lockdown caused by the COVID-19, investing in virtual and remote activities to make culture survive became crucial as no one could enjoy Cultural Heritage in person. The Cultural Heritage community heavily invested in digitisation campaigns, mainly modelling data as Knowledge Graphs by becoming one of the most successful Semantic Web technologies application domains. Despite the vast investment in Cultural Heritage Knowledge Graphs, the syntactic complexity of RDF query languages, e.g., SPARQL, negatively affects and threatens data exploitation, risking leaving this enormous potential untapped. Thus, we aim to support the Cultural Heritage community (and everyone interested in Cultural Heritage) in querying Knowledge Graphs without requiring technical competencies in Semantic Web technologies. We propose an engaging exploitation tool accessible to all without losing sight of developers' technological challenges. Engagement is achieved by letting the Cultural Heritage community leave the passive position of the visitor and actively create their Virtual Assistant extensions to exploit proprietary or public Knowledge Graphs in question-answering. By accessible to all, we mean that the proposed software framework is freely available on GitHub and Zenodo with an open-source license. We do not lose sight of developers' technical challenges, which are carefully considered in the design and evaluation phases. This article first analyses the effort invested in publishing Cultural Heritage Knowledge Graphs to quantify data developers can rely on in designing and implementing data exploitation tools in this domain. Moreover, we point out challenges developers may face in exploiting them in automatic approaches. Second, it presents a domain-agnostic Knowledge Graph exploitation approach based on virtual assistants as they naturally enable question-answering features where users formulate questions in natural language directly by their smartphones. Then, we discuss the design and implementation of this approach within an automatic community-shared software framework (a.k.a. generator) of virtual assistant extensions and its evaluation in terms of performance and perceived utility according to end-users. Finally, according to a taxonomy of the Cultural Heritage field, we present a use case for each category to show the applicability of the proposed approach in the Cultural Heritage domain. In overviewing our analysis and the proposed approach, we point out challenges that a developer may face in designing virtual assistant extensions to query Knowledge Graphs, and we show the effect of these challenges in practice. © 2023-The authors. Published by IOS Press.},
	author_keywords = {Community-shared software framework; knowledge graph; question-answering; SPARQL; virtual assistant},
	publisher = {IOS Press BV},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true},
	note = {All Open Access, Bronze Open Access},
	abbr={SWJ},
	sjr = {<a href="https://www.scimagojr.com/journalsearch.php?q=21100269620&amp;tip=sid&amp;exact=no" title="SCImago Journal &amp; Country Rank"><img border="0" src="https://www.scimagojr.com/journal_img.php?id=21100269620" alt="SCImago Journal &amp; Country Rank"  /></a>},
}

@ARTICLE{Antelmi2020,
	author = {Antelmi, Alessia and Cordasco, Gennaro and Kamiński, Bogumi̷l and Pra̷lat, Pawe̷l and Scarano, Vittorio and Spagnuolo, Carmine and Szufel, Przemyslaw},
	title = {Analyzing, exploring, and visualizing complex networks via hypergraphs using simplehypergraphs.Jl},
	year = {2020},
	journal = {Internet Mathematics},
	volume = {2020},
	number = {1},
	doi = {10.24166/im.01.2020},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85085085510&doi=10.24166%2fim.01.2020&partnerID=40&md5=1376bdefe2d22a68a4a236a4d993ffa7},
	abstract = {Real-world complex networks are usually being modeled as graphs. The concept of graphs assumes that the relations within the network are binary (for instance, between pairs of nodes); however, this is not always true for many real-life scenarios, such as peer-to-peer communication schemes, paper co-authorship, or social network interactions. For such scenarios, it is often the case that the underlying network is better and more naturally modeled by hypergraphs. A hypergraph is a generalization of a graph in which a single (hyper)edge can connect any number of vertices. Hypergraphs allow modelers to have a complete representation of multi-relational (many-to-many) networks; hence, they are extremely suitable for analyzing and discovering more subtle dependencies in such data structures. Working with hypergraphs requires new software libraries that make it possible to perform operations on them, from basic algorithms (such as searching or traversing the network) to computing significant hypergraph measures, to including more challenging algorithms (such as community detection). In this paper, we present a new software library, SimpleHypergraphs.jl, written in the Julia language and designed for high-performance computing on hypergraphs and propose two new algorithms for analyzing their properties: s-betweenness and modified label propagation. We also present various approaches for hypergraph visualization integrated into our tool. In order to demonstrate how to exploit the library in practice, we discuss two case studies based on the 2019 Yelp Challenge dataset and the collaboration network built upon the Game of Thrones TV series. The results are promising and they confirm the ability of hypergraphs to provide more insight than standard graph-based approaches. © 2020, Ryerson University. All rights reserved.},
	author_keywords = {Analyzing hypergraphs; Exploring hypergraphs; Hypergraphs; Julia language; Software library; Visualizing hypergraphs},
	publisher = {Ryerson University},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true},
	note = {All Open Access, Bronze Open Access, Green Open Access}
}

@INPROCEEDINGS{Cordasco2018371,
	author = {Cordasco, Gennaro and Malandrino, Delfina and Pirozzi, Donato and Scarano, Vittorio and Spagnuolo, Carmine},
	title = {A layered architecture for open data: Design, implementation and experiences},
	year = {2018},
	journal = {ACM International INPROCEEDINGS Proceeding Series},
	pages = {371 – 381},
	doi = {10.1145/3209415.3209466},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85051438473&doi=10.1145%2f3209415.3209466&partnerID=40&md5=bef67b514eb0595425f512301a6dd63f},
	abstract = {In order to increase transparency, Public Administrations (PAs) have their own portals to publish Open Data, resulting in more openness, reduced corruption and improved services. Open Data (OD) initiatives are achieving less citizens' engagement than expected. Hence, the need to find other ways and services to obtain more engagement and extract value from OD. This paper introduces an architectural model to design software platforms with the objective to increase public value through collective participation of citizens, public administrations and key stakeholders. The architectural model originates from the Data-Information-Knowledge hierarchy, where greater value is at the top of the pyramid, in information and knowledge gathered from data. Thus, the architectural model adds the collaborative and presentation layers to the classical data layer; citizens, public administrations, and stakeholders form groups of interests to understand, reason and interpret Open Data to gather information and generate knowledge that will be communicated to the general audience over Internet, thus, increasing public value. The paper describes three platform instances: the ROUTE-TO-PA ecosystem, the data.world, and DKAN, which functionalities can be mapped onto the architectural model proposed in the paper. Furthermore, the paper describes HETOR, a concreate experience of exploitation of the architectural model and the ROUTE-TO-PA ecosystem with groups of students and associations of citizens, who collaborated together to ultimately generate new knowledge for Cultural Heritage to be communicated over Internet through blog posts. © 2018 Association for Computing Machinery.},
	author_keywords = {E-Participation; Open Data; Open Government},
	keywords = {Ecosystems; Government data processing; Architectural modeling; Cultural heritages; Data informations; E-participation; Groups of interests; Layered architecture; Open datum; Open Government; Public administration},
	publisher = {Association for Computing Machinery},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@INPROCEEDINGS{Cordasco20161803,
	author = {Cordasco, Gennaro and Spagnuolo, Carmine and Scarano, Vittorio},
	title = {Toward the new version of D-MASON: Efficiency, effectiveness and correctness in parallel and distributed agent-based simulations},
	year = {2016},
	journal = {Proceedings - 2016 IEEE 30th International Parallel and Distributed Processing Symposium, IPDPS 2016},
	pages = {1803 – 1812},
	doi = {10.1109/IPDPSW.2016.52},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991577930&doi=10.1109%2fIPDPSW.2016.52&partnerID=40&md5=bcedd30ce952d3db2d72d9fff49a14aa},
	abstract = {Agent-Based Models (ABMs) denote a class of models which, by simulating the behavior of multiple agents (i.e., independent actions, interactions and adaptation), aim to emulate and/or predict complex phenomena. One of the general features of ABM simulations is their experimental capacity, that requires a viable and reliable infrastructure to interact with a running simulation, monitoring its behaviour, as it proceeds, and applying changes to the configurations at run time, in order to study «what if» scenarios. A common approach for improving the efficiency and the effectiveness of ABMs as a research tool is to distribute the overall computation on a number of machines, which makes the design of the simulation model particularly challenging. D-MASON framework is a distributed version of the MASON library for writing and running Agent-based simulations. We briefly present D-MASON architecture and functionalities. Then we presents its novel features: a distributed network field and a novel communication layer dedicated to massive parallel machines. The main contribution of the paper is in providing a memory consistency modeling, where the previous state of theagent is made available (consistently) for all other agents (even the one on other processors) and this is obtained by exploiting the Java Method Handler mechanism. Full documentation, additional tutorials and other material can be found at www.dmason.org where the framework can be downloaded. © 2016 IEEE.},
	author_keywords = {Agent-based simulations; D-MASON; Distributed Systems; High Performance Computing; MASON; Parallel Computing},
	keywords = {Autonomous agents; Complex networks; Computational methods; Efficiency; Java programming language; Multi agent systems; Parallel processing systems; Agent based simulation; Communication layers; Distributed networks; Distributed systems; High performance computing; MASON; Memory consistency models; Running simulations; Distributed computer systems},
	publisher = {Institute of Electrical and Electronics Engineers Inc.},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@INPROCEEDINGS{Andriessen201747,
	author = {Andriessen, Jerry and Baker, Michael and Cordasco, Gennaro and De Donato, Renato and Malandrino, Delfina and Palmieri, Giuseppina and Pardijs, Mirjam and Petta, Andrea and Pirozzi, Donato and Scarano, Vittorio and Serra, Luigi and Spagnuolo, Carmine and Vicidomini, Luca},
	title = {Increasing Public Value through Co-Creation of Open Knowledge},
	year = {2017},
	journal = {2017 4th International INPROCEEDINGS on eDemocracy and eGovernment, ICEDEG 2017},
	pages = {47 – 54},
	doi = {10.1109/ICEDEG.2017.7962512},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85026835638&doi=10.1109%2fICEDEG.2017.7962512&partnerID=40&md5=8249810b6ce6e41ec4191b6914b96343},
	abstract = {The aim of our research is to study how to increase Public Value through the collective participation, involving Public Administrations, stakeholders and citizens together. The Public Value for citizens is in the available and gained Knowledge. The paper models this concept by introducing a variant of the classic Data-Information-Knowledge pyramid, considering everything published as open and public. The paper introduces a social and iterative process designed for user appropriation, that includes the Knowledge and Data Co-Creation with the aim to generate public Open Knowledge. Users with process and technology appropriation can creatively follow the process in different ways. The paper concludes by introducing a brief preliminary scenario that exploits the process, platform and technology in the context of Cultural Heritage. © 2017 IEEE.},
	keywords = {Co-creation; Cultural heritages; Data informations; Iterative process; Paper models; Public values; Technology appropriations; Public administration},
	publisher = {Institute of Electrical and Electronics Engineers Inc.},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@INPROCEEDINGS{Carillo2016341,
	author = {Carillo, Michele and Cordasco, Gennaro and Serrapica, Flavio and Scarano, Vittorio and Spagnuolo, Carmine and Szufel, Przemysaw},
	title = {SOF: Zero Configuration Simulation Optimization Framework on the Cloud},
	year = {2016},
	journal = {Proceedings - 24th Euromicro International INPROCEEDINGS on Parallel, Distributed, and Network-Based Processing, PDP 2016},
	pages = {341 – 344},
	doi = {10.1109/PDP.2016.22},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84968877334&doi=10.1109%2fPDP.2016.22&partnerID=40&md5=a51a791f312c49f58b42f66e1ba3f8a6},
	abstract = {Simulation models are becoming an increasingly popular tool for the analysis and optimization of complex real systems in different fields. Finding an optimal system design requires performing a large parameter sweep. In this paper, we present the design of SOF (Simulation Optimization and exploration Framework on the cloud), a framework which exploits the computing power of a cloud computational environment in order to realize effective and efficient simulation optimization strategies. SOF offers several attractive features: SOF requires «zero configuration» as it does not require any additional software installed on the remote node, SOF is transparent to the user, since the user is totally unaware that system operates on a distributed environment, SOF is highly customizable and programmable, since it enables the running of different simulation optimization scenarios on different simulation toolkits. The tool has been fully developed and is available on a public repository under the Apache public licence. © 2016 IEEE.},
	keywords = {Complex networks; Computational environments; Computing power; Distributed environments; Efficient simulation; Public repositories; Real systems; Simulation optimization; Simulation toolkits; Computer software},
	publisher = {Institute of Electrical and Electronics Engineers Inc.},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@ARTICLE{Antelmi2023,
	author = {Antelmi, Alessia and Cordasco, Gennaro and D’Ambrosio, Giuseppe and De Vinco, Daniele and Spagnuolo, Carmine},
	title = {Experimenting with Agent-Based Model Simulation Tools},
	year = {2023},
	journal = {Applied Sciences (Switzerland)},
	volume = {13},
	number = {1},
	doi = {10.3390/app13010013},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85145846177&doi=10.3390%2fapp13010013&partnerID=40&md5=ad64f6202881bd0c71563047cccb9f46},
	abstract = {Agent-based models (ABMs) are one of the most effective and successful methods for analyzing real-world complex systems by investigating how modeling interactions on the individual level (i.e., micro-level) leads to the understanding of emergent phenomena on the system level (i.e., macro-level). ABMs represent an interdisciplinary approach to examining complex systems, and the heterogeneous background of ABM users demands comprehensive, easy-to-use, and efficient environments to develop ABM simulations. Currently, many tools, frameworks, and libraries exist, each with its characteristics and objectives. This article aims to guide newcomers in the jungle of ABM tools toward choosing the right tool for their skills and needs. This work proposes a thorough overview of open-source general-purpose ABM tools and offers a comparison from a two-fold perspective. We first describe an off-the-shelf evaluation by considering each ABM tool’s features, ease of use, and efficiency according to its authors. Then, we provide a hands-on evaluation of some ABM tools by judging the effort required in developing and running four ABM models and the obtained performance. © 2022 by the authors.},
	author_keywords = {agent-based model; agent-based simulations; agent-based tools; open-source software},
	publisher = {MDPI},
	type = {Review},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true},
	note = {All Open Access, Gold Open Access, Green Open Access}
}

@INPROCEEDINGS{Cordasco20171472,
	author = {Cordasco, Gennaro and Spagnuolo, Carmine and Scarano, Vittorio},
	title = {Work partitioning on parallel and distributed agent-based simulation},
	year = {2017},
	journal = {Proceedings - 2017 IEEE 31st International Parallel and Distributed Processing Symposium Workshops, IPDPSW 2017},
	pages = {1472 – 1481},
	doi = {10.1109/IPDPSW.2017.87},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85028058800&doi=10.1109%2fIPDPSW.2017.87&partnerID=40&md5=1480bff52008937f6c3e11cb31a41b32},
	abstract = {Work partitioning is a key challenge with ap- plications in many scientific and technological fields. The problem is very well studied with a rich literature on both distributed and parallel computing architectures. In this paper we deal with the work partitioning problem for parallel and distributed agent-based simulations which aims at (i) balancing the overall load distribution, (ii) minimizing, at the same time, the communication overhead due to agents' inter-dependencies. We introduce a classification taxonomy of work partitioning strategies and present a space-based work partitioning ap- proach, based on a Quad-tree data structure, which enables to: identify a good space partitioning (even when the distribution of agents on the fields is non-uniform) with a limited impact in terms of communication. Being a multi-objective problem, the results are difficult to compare and it is hard to foresee what can be the impact of one solution. For this reason we evaluate our strategy in a real context using a well-known behavior (the boids flocking model), on a distributed agent based simulation framework (D-MASON). The results show that our proposal provides a sensible impact on the performances of the system and scales in terms of the number of logical processors. © 2017 IEEE.},
	author_keywords = {Agent-based simulations; D-MASON; Distributed Systems; Parallel Computing; Work partitioning},
	keywords = {Computer architecture; Parallel architectures; Parallel processing systems; Systems analysis; Trees (mathematics); Agent based simulation; Communication overheads; Distributed and parallel computing; Distributed systems; Multi-objective problem; Partitioning problem; Partitioning strategies; Work partitioning; Distributed computer systems},
	publisher = {Institute of Electrical and Electronics Engineers Inc.},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@ARTICLE{Cosenza202161,
	author = {Cosenza, Biagio and Popov, Nikita and Juurlink, Ben and Richmond, Paul and Chimeh, Mozhgan Kabiri and Spagnuolo, Carmine and Cordasco, Gennaro and Scarano, Vittorio},
	title = {Easy and efficient agent-based simulations with the OpenABL language and compiler},
	year = {2021},
	journal = {Future Generation Computer Systems},
	volume = {116},
	pages = {61 – 75},
	doi = {10.1016/j.future.2020.10.014},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85094807912&doi=10.1016%2fj.future.2020.10.014&partnerID=40&md5=735a69df97f97ec7ec5a8fed0af442c2},
	abstract = {Agent-based simulations represent an effective scientific tool, with numerous applications from social sciences to biology, which aims to emulate or predict complex phenomena through a set of simple rules performed by multiple agents. To simulate a large number of agents with complex models, practitioners have developed high-performance parallel implementations, often specialized for particular scenarios and target hardware. It is, however, difficult to obtain portable simulations, which achieve high performance and at the same time are easy to write and to reproduce on different hardware. This article gives a complete presentation of OPENABL, a domain-specific language and a compiler for agent-based simulations that enable users to achieve high-performance parallel and distributed agent simulations with a simple and portable programming environment. OPENABL is comprised of (1) an easy-to-program language, which relies on domain abstractions and explicitly exposes agent parallelism, synchronization and locality, (2) a source-to-source compiler, and (3) a set of pluggable compiler backends, which generate target code for multi-core CPUs, GPUs, and cloud-based systems. We evaluate OPENABL on simulations from different fields. In particular, our analysis includes predator–prey and keratinocyte, two complex simulations with multiple step functions, heterogeneous agent types, and dynamic creation and removal of agents. The results show that OPENABL-generated codes are portable to different platforms, perform similarly to manual target-specific implementations, and require significantly fewer lines of codes. © 2020 Elsevier B.V.},
	author_keywords = {Agent-based simulation; Compilers; Domain specific language; GPU; Parallel and distributed computing},
	keywords = {Codes (symbols); Computer aided software engineering; Multi agent systems; Multicore programming; Problem oriented languages; Agent based simulation; Complex simulation; Distributed agents; Domain abstraction; Domain specific languages; Heterogeneous agents; Parallel implementations; Portable programming; Program compilers},
	publisher = {Elsevier B.V.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true},
	note = {All Open Access, Green Open Access},
	selected={true},
	abbr={FGCS},
	sjr = {<a href="https://www.scimagojr.com/journalsearch.php?q=12264&amp;tip=sid&amp;exact=no" title="SCImago Journal &amp; Country Rank"><img border="0" src="https://www.scimagojr.com/journal_img.php?id=12264" alt="SCImago Journal &amp; Country Rank"  /></a>},
}

@ARTICLE{Cordasco2014407,
	author = {Cordasco, Gennaro and Milone, Francesco and Spagnuolo, Carmine and Vicidomini, Luca},
	title = {Exploiting D-Mason on parallel platforms: A novel communication strategy},
	year = {2014},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {8805},
	number = {Part 1},
	pages = {407 – 417},
	doi = {10.1007/978-3-319-14325-5_35},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84917743993&doi=10.1007%2f978-3-319-14325-5_35&partnerID=40&md5=b14357257d80484fa0e38075d1493b8b},
	abstract = {Agent-based simulation models are a powerful experimental tool for research and management in many scientific and technological fields.; D-Mason is a parallel version of Mason, a library for writing and running Agent-based simulations.; In this paper, we present a novel development of D-Mason, a decentralized communication strategy which realizes a Publish/Subscribe paradigm through a layer based on the MPI standard. We show that our communication mechanism is much more scalable and efficient than the previous centralized one. © Springer International Publishing Switzerland 2014.},
	author_keywords = {Agent-based simulation models; D-Mason; Distributed Systems; High Performance Computing; Mason; MPI; Parallel Computing; Publish/Subscribe},
	keywords = {Parallel processing systems; Systems analysis; Agent-based simulation models; Distributed systems; High performance computing; Mason; Publish/subscribe; Distributed computer systems},
	publisher = {Springer Verlag},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@ARTICLE{Cosenza2018505,
	author = {Cosenza, Biagio and Popov, Nikita and Juurlink, Ben and Richmond, Paul and Chimeh, Mozhgan Kabiri and Spagnuolo, Carmine and Cordasco, Gennaro and Scarano, Vittorio},
	title = {OpenABL: A Domain-Specific Language for Parallel and Distributed Agent-Based Simulations},
	year = {2018},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {11014 LNCS},
	pages = {505 – 518},
	doi = {10.1007/978-3-319-96983-1_36},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85052967604&doi=10.1007%2f978-3-319-96983-1_36&partnerID=40&md5=a3039e1bd8f36c473262430dbf660a70},
	abstract = {Agent-based simulations are becoming widespread among scientists from different areas, who use them to model increasingly complex problems. To cope with the growing computational complexity, parallel and distributed implementations have been developed for a wide range of platforms. However, it is difficult to have simulations that are portable to different platforms while still achieving high performance. We present OpenABL, a domain-specific language for portable, high-performance, parallel agent modeling. It comprises an easy-to-program language that relies on high-level abstractions for programmability and explicitly exploits agent parallelism to deliver high performance. A source-to-source compiler translates the input code to a high-level intermediate representation exposing parallelism, locality and synchronization, and, thanks to an architecture based on pluggable backends, generates target code for multi-core CPUs, GPUs, large clusters and cloud systems. OpenABL has been evaluated on six applications from various fields such as ecology, animation, and social sciences. The generated code scales to large clusters and performs similarly to hand-written target-specific code, while requiring significantly fewer lines of codes. © 2018, Springer International Publishing AG, part of Springer Nature.},
	keywords = {Codes (symbols); Distributed computer systems; Modeling languages; Problem oriented languages; Program processors; Agent based simulation; Architecture-based; Distributed agents; Distributed implementation; Domain specific languages; High-level abstraction; Intermediate representations; Program language; Computer aided software engineering},
	publisher = {Springer Verlag},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true},
	note = {All Open Access, Green Open Access}
}

@ARTICLE{Antelmi2019115,
	author = {Antelmi, Alessia and Cordasco, Gennaro and Kamiński, Bogumił and Prałat, Paweł and Scarano, Vittorio and Spagnuolo, Carmine and Szufel, Przemyslaw},
	title = {SimpleHypergraphs.jl—novel software framework for modelling and analysis of hypergraphs},
	year = {2019},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {11631 LNCS},
	pages = {115 – 129},
	doi = {10.1007/978-3-030-25070-6_9},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85069880556&doi=10.1007%2f978-3-030-25070-6_9&partnerID=40&md5=858f3d48ba241ff1978be34761c1ddc8},
	abstract = {Hypergraphs are natural generalization of graphs in which a single (hyper)edge can connect any number of vertices. As a result, hypergraphs are suitable and useful to model many important networks and processes. Typical applications are related to social data analysis and include situations such as exchanging emails with several recipients, reviewing products on social platforms, or analyzing security vulnerabilities of information networks. In many situations, using hypergraphs instead of classical graphs allows us to better capture and analyze dependencies within the network. In this paper, we propose a new library, named SimpleHypergraphs.jl, designed for efficient hypegraph analysis. The library exploits the Julia language flexibility and direct support for distributed computing in order to bring a new quality for simulating and analyzing processes represented as hypergraphs. In order to show how the library can be used we study two case studies based on the Yelp dataset. Results are promising and confirm the ability of hypergraphs to provide more insight than standard graph-based approaches. © Springer Nature Switzerland AG 2019.},
	author_keywords = {Hypergraphs; Julia programming language; Modelling hypergraphs; Software library},
	keywords = {Computer programming; Distributed computer systems; Graphic methods; Information services; Modeling languages; Hyper graph; Information networks; Modelling and analysis; Natural generalization; Security vulnerabilities; Software frameworks; Software libraries; Typical application; Graph theory},
	publisher = {Springer Verlag},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@ARTICLE{Antelmi202036,
	author = {Antelmi, Alessia and Cordasco, Gennaro and Spagnuolo, Carmine and Szufel, Przemysław},
	title = {Information diffusion in complex networks: a model based on hypergraphs and its analysis},
	year = {2020},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {12091 LNCS},
	pages = {36 – 51},
	doi = {10.1007/978-3-030-48478-1_3},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85086232060&doi=10.1007%2f978-3-030-48478-1_3&partnerID=40&md5=21010bd4b2b26706759f710ba605fd86},
	abstract = {This work introduces the problem of social influence diffusion in complex networks, where vertices are linked not only through simple pairwise relationships to other nodes but with groups of nodes of arbitrary size. A challenging problem that arises in this domain is to determine a small subset of nodes S (a target-set) able to spread their influence in the whole network. This problem has been formalized and studied in different ways, and many viable solutions have been found for graphs. These have been applied to study several phenomena in research fields such as social, economic, biological, and physical sciences. In this contribution, we investigated the social influence problem on hypergraphs. As hypergraphs are mathematical structures generalization of graphs, they can naturally model the many-to-many relationships characterizing a complex network. Given a network represented by a hypergraph H=(V, E), we consider a dynamic influence diffusion process on H, evolving as follows. At the beginning of the process, the nodes in a given set S (Formula Presented) V are influenced. Then, at each iteration, the influenced hyperedges set is augmented by all hyperedges having a sufficiently large number of influenced nodes. Consequently, the set of influenced nodes is extended by all the nodes contained in a sufficiently large number of already influenced hyperedges. The process terminates when no new nodes can be influenced. The so defined problem is an inherent chicken-and-egg question as nodes are influenced by groups of other nodes (or hyperedges), while hyperedges (or group of nodes) are influenced by the nodes they contain. In this paper, we provide a formal definition of the influence diffusion problem on hypergraphs. We propose a set of greedy-based heuristic strategies for finding the minimum influence target set, and we present an in-depth analysis of their performance on several classes of random hypergraphs. Furthermore, we describe an experiment on a real use-case, based on the character co-occurrences network of the Game-of-Thrones TV Series. © Springer Nature Switzerland AG 2020.},
	author_keywords = {Influence diffusion; Random hypergraphs; Social network; Target set selection},
	keywords = {Complex networks; Graph algorithms; Graph structures; Graph theory; Iterative methods; Diffusion problems; Diffusion process; Formal definition; Heuristic strategy; In-depth analysis; Information diffusion; Mathematical structure; Social influence; Economic and social effects},
	publisher = {Springer},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@ARTICLE{Carillo2018108,
	author = {Carillo, Michele and Cordasco, Gennaro and Serrapica, Flavio and Scarano, Vittorio and Spagnuolo, Carmine and Szufel, Przemysław},
	title = {Distributed simulation optimization and parameter exploration framework for the cloud},
	year = {2018},
	journal = {Simulation Modelling Practice and Theory},
	volume = {83},
	pages = {108 – 123},
	doi = {10.1016/j.simpat.2017.12.005},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85039448974&doi=10.1016%2fj.simpat.2017.12.005&partnerID=40&md5=4c973bd636f16a60e4cae1198d244b2b},
	abstract = {Simulation models are becoming an increasingly popular tool for the analysis and optimization of complex real systems in different fields. Finding an optimal system design requires performing a large sweep over the parameter space in an organized way. Hence, the model optimization process is extremely demanding from a computational point of view, as it requires careful, time-consuming, complex orchestration of coordinated executions. In this paper, we present the design of SOF (Simulation Optimization and exploration Framework in the cloud), a framework which exploits the computing power of a cloud computational environment in order to carry out effective and efficient simulation optimization strategies. SOF offers several attractive features. Firstly, SOF requires “zero configuration” as it does not require any additional software installed on the remote node; only standard Apache Hadoop and SSH access are sufficient. Secondly, SOF is transparent to the user, since the user is totally unaware that the system operates on a distributed environment. Finally, SOF is highly customizable and programmable, since it enables the running of different simulation optimization scenarios using diverse programming languages – provided that the hosting platform supports them – and different simulation toolkits, as developed by the modeler. The tool has been fully developed and is available on a public repository1 under the terms of the open source Apache License. It has been tested and validated on several private platforms, such as a dedicated cluster of workstations, as well as on public platforms, including the Hortonworks Data Platform and Amazon Web Services Elastic MapReduce solution. © 2017 Elsevier B.V.},
	author_keywords = {Agent-based simulation; Cloud computing; Distributed computing; Model exploration; Parallel computing; Simulation optimization},
	keywords = {Cloud computing; Computer software; Coordination reactions; Distributed computer systems; HTTP; Modeling languages; Multiprocessing systems; Open source software; Parallel processing systems; Systems analysis; Web services; Agent based simulation; Cluster of workstations; Computational environments; Distributed environments; Distributed simulations; Efficient simulation; Parameter exploration; Simulation optimization; Computer simulation languages},
	publisher = {Elsevier B.V.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true},
	selected={true},
	abbr={SIMPAT},
	sjr = {<a href="https://www.scimagojr.com/journalsearch.php?q=12189&amp;tip=sid&amp;exact=no" title="SCImago Journal &amp; Country Rank"><img border="0" src="https://www.scimagojr.com/journal_img.php?id=12189" alt="SCImago Journal &amp; Country Rank"  /></a>},

}

@ARTICLE{Antelmi202298993,
	author = {Antelmi, Alessia and D'Ambrosio, Giuseppe and Petta, Andrea and Serra, Luigi and Spagnuolo, Carmine},
	title = {A Volunteer Computing Architecture for Computational Workflows on Decentralized Web},
	year = {2022},
	journal = {IEEE Access},
	volume = {10},
	pages = {98993 – 99010},
	doi = {10.1109/ACCESS.2022.3207167},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85139226212&doi=10.1109%2fACCESS.2022.3207167&partnerID=40&md5=8aa3ae4a0824a7feac90d241d217a2c2},
	abstract = {The amount of accessible computational devices over the Internet offers an enormous but latent computational power. Nonetheless, the complexity of orchestrating and managing such devices requires dedicated architectures and tools and hinders the exploitation of this vast processing capacity. Over the last years, the paradigm of (Browser-based) Volunteer Computing emerged as a unique approach to harnessing such computational capabilities, leveraging the idea of voluntarily offering resources. This article proposes VFuse, a groundbreaking architecture to exploit the Browser-based Volunteer Computing paradigm via a ready-to-access volunteer network. VFuse offers a modern multi-language programming environment for developing scientific workflows using WebAssembly technology without requiring the user any local installation or configuration. We equipped our architecture with a secure and transparent rewarding mechanism based on blockchain technology (Ethereum) and distributed P2P file system (IPFS). Further, the use of Non-Fungible Tokens provides a unique, secure, and transparent methodology for recognizing the users' participation in the network. We developed a prototype of the proposed architecture and four example applications implemented with our system. All code and examples are publicly available on GitHub.  © 2013 IEEE.},
	author_keywords = {browser-based volunteer computing; decentralized web; distributed computing; P2P; parallel computing; Scientific computing; volunteer computing; Web 3.0; WebAssembly},
	keywords = {Cluster computing; Computer architecture; File organization; Natural sciences computing; Peer to peer networks; Software prototyping; Browser-based volunteer computing; Computing architecture; Decentralised; Decentralized web; P2P; Parallel com- puting; Volunteer computing; Web 3.0; Webassembly; Network architecture},
	publisher = {Institute of Electrical and Electronics Engineers Inc.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true},
	note = {All Open Access, Gold Open Access},
	selected={true},
	abbr={ACCESS},
	sjr = {<a href="https://www.scimagojr.com/journalsearch.php?q=21100374601&amp;tip=sid&amp;exact=no" title="SCImago Journal &amp; Country Rank"><img border="0" src="https://www.scimagojr.com/journal_img.php?id=21100374601" alt="SCImago Journal &amp; Country Rank"  /></a>},
}

@ARTICLE{Cordasco201815,
	author = {Cordasco, Gennaro and Scarano, Vittorio and Spagnuolo, Carmine},
	title = {Distributed MASON: A scalable distributed multi-agent simulation environment},
	year = {2018},
	journal = {Simulation Modelling Practice and Theory},
	volume = {89},
	pages = {15 – 34},
	doi = {10.1016/j.simpat.2018.09.002},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85053387248&doi=10.1016%2fj.simpat.2018.09.002&partnerID=40&md5=69e8f22545e4d5863d2f37d7ea10ac01},
	abstract = {Computational Social Science (CSS) involves interdisciplinary fields and exploits computational methods, such as social network analysis as well as computer simulation with the goal of better understanding social phenomena. Agent-Based Models (ABMs) represent an effective research tool for CSS and consist of a class of models, which, aim to emulate or predict complex phenomena through a set of simple rules (i.e., independent actions, interactions and adaptation), performed by multiple agents. The efficiency and scalability of ABMs systems are typically obtained distributing the overall computation on several machines, which interact with each other in order to simulate a specific model. Unfortunately, the design of a distributed simulation model is particularly challenging, especially for domain experts who sporadically are computer scientists and are not used to developing parallel code. D-MASON framework is a distributed version of the MASON library for designing and executing ABMs in a distributed environment ensuring scalability and easiness. D-MASON enable the developer to exploit the computing power of distributed environment in a transparent manner; the developer has to do simple incremental modifications to existing MASON models, without re-designing them. This paper presents several novel features and architectural improvements introduced in the D-MASON framework: an improved space partitioning strategy, a distributed 3D field, a distributed network field, a decentralized communication layer, a novel memory consistency mechanism and the integration to cloud environments. Full documentation, additional tutorials, and other material can be found at https://github.com/isislab-unisa/dmason where the framework can be downloaded. © 2018},
	author_keywords = {Agent-based simulation; Cloud computing; Distributed computing; Parallel computing; Scalable computational science},
	keywords = {Autonomous agents; Cloud computing; Computational methods; Distributed computer systems; Parallel processing systems; Scalability; Agent based simulation; Architectural improvements; Computational science; Computational social science; Decentralized communications; Distributed simulation modeling; Interdisciplinary fields; Space-partitioning strategy; Multi agent systems},
	publisher = {Elsevier B.V.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true},
	selected={true},
	abbr={SIMPAT},
	sjr = {<a href="https://www.scimagojr.com/journalsearch.php?q=12189&amp;tip=sid&amp;exact=no" title="SCImago Journal &amp; Country Rank"><img border="0" src="https://www.scimagojr.com/journal_img.php?id=12189" alt="SCImago Journal &amp; Country Rank"  /></a>},

}

@INPROCEEDINGS{Wang2018135,
	author = {Wang, Haoliang and Wei, Ermo and Simon, Robert and Luke, Sean and Crooks, Andrew and Freelan, David and Spagnuolo, Carmine},
	title = {Scalability in the MASON Multi-Agent Simulation System},
	year = {2018},
	journal = {Proceedings of the 2018 IEEE/ACM 22nd International Symposium on Distributed Simulation and Real Time Applications, DS-RT 2018},
	pages = {135 – 144},
	doi = {10.1109/DISTRA.2018.8601006},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85061637766&doi=10.1109%2fDISTRA.2018.8601006&partnerID=40&md5=30f95696a4e1301744689b4960d8995d},
	abstract = {This paper describes Distributed MASON, a distributed version of the MASON agent-based simulation tool. Distributed MASON is architected to take advantage of well known principles from Parallel and Discrete Event Simulation, such as the use of Logical Processes (LP) as a method for obtaining scalable and high performing simulation systems. We first explain data management and sharing between LPs and describe our approach to load balancing. We then present both a local greedy approach and a global hierarchical approach. Finally, we present the results of our implementation of Distributed MASON on an instance in the Amazon Cloud, using several standard multi-agent models. The results indicate that our design is highly scalable and achieves our expected levels of speed-up. © 2018 IEEE.},
	keywords = {Information management; Multi agent systems; Agent based simulation; Discrete-event simulations; Greedy approaches; Hierarchical approach; Load-Balancing; Logical process; Multi-Agent Model; Multi-agents simulations; Simulation systems; Speed up; Discrete event simulation},
	publisher = {Institute of Electrical and Electronics Engineers Inc.},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@INPROCEEDINGS{Malandrino2016357,
	author = {Malandrino, Delfina and Manno, Ilaria and Palmieri, Giuseppina and Petta, Andrea and Pirozzi, Donato and Scarano, Vittorio and Serra, Luigi and Spagnuolo, Carmine and Vicidomini, Luca and Cordasco, Gennaro},
	title = {An architecture for social sharing and collaboration around open data visualisations},
	year = {2016},
	journal = {Proceedings of the ACM INPROCEEDINGS on Computer Supported Cooperative Work, CSCW},
	volume = {26-February-2016},
	pages = {357 – 360},
	doi = {10.1145/2818052.2869099},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963516599&doi=10.1145%2f2818052.2869099&partnerID=40&md5=fdd867bb37444a4a08c9c2d0b00ebacd},
	abstract = {This paper introduces the DatalEt-Ecosystem Provider (DEEP), an open source, extensible, modular and pluggable architecture providing datalets, which are web-component visualisations of datasets content. DEEP enables the sharing and collaboration around data visualisations, supporting for instance communities in public deliberation around Open Data. Users can create, reconfigure, reuse and share interactive visualisations in any web-page and other systems.},
	author_keywords = {Collaboration; Open Data; Sharing of visualisations},
	keywords = {Computer supported cooperative work; Interactive computer systems; Visualization; Websites; Collaboration; Open datum; Open sources; Pluggable architecture; Social sharing; Web components; Groupware},
	publisher = {Association for Computing Machinery},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@ARTICLE{Esposito202265,
	author = {Esposito, Anna and Amorese, Terry and Buonanno, Michele and Cuciniello, Marialucia and Esposito, Antonietta M. and Faundez-Zanuy, Marcos and Likforman-Sulem, Laurence and Riviello, Maria Teresa and Spagnuolo, Carmine and Troncone, Alda and Cordasco, Gennaro},
	title = {Handwriting and Drawing Features for Detecting Personality Traits: An Analysis on Big Five Sub-dimensions},
	year = {2022},
	journal = {Acta Polytechnica Hungarica},
	volume = {19},
	number = {11},
	pages = {65 – 84},
	doi = {10.12700/APH.19.11.2022.11.4},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85147955144&doi=10.12700%2fAPH.19.11.2022.11.4&partnerID=40&md5=94f8b0b214c1d68db29c873fe6104b4e},
	abstract = {Handwriting and Drawing are functional tasks involving physical and cognitive processes. Recently they have been investigated for detecting cognitive and motor disorders. In this work, handwriting/drawing features are investigated for identifying connections with personality traits. For this purpose, an experiment comprising seven handwriting/drawing tasks has been administrated to 78 young adults (mean age=24.6 ± 2.4 years) equally balanced by gender. Handwriting and Drawing activities-both on and close to the paper – had been recorded online through a digitizing tablet able to measure handwriting and drawing features such as pressure, speed, dimension, and inclination of each pen-stroke on the paper. Participants were asked to fill the Big Five Personality Questionnaire (BFQ) and according to the scores obtained for each of the 5 dimensions and 10 Big Five sub-dimensions, were partitioned into three categories: low, typical, and high. To evaluate whether the recorded handwriting/drawing features are connected with personality traits ANOVA repeated measures have been performed with gender and group category (low, typical, and high) as between and the listed handwriting/drawing features as within factors. The analyses show significant differences among low, typical and, high BFQ scores for the main Big Five dimensions and the ten Big Five sub-dimensions, indicating that personality traits can be revealed by a quantitative analysis of the proposed handwriting/drawing features. © 2022, Budapest Tech Polytechnical Institution. All rights reserved.},
	author_keywords = {Big Five; Graphology; Handwriting and drawing tasks; Personality traits},
	publisher = {Budapest Tech Polytechnical Institution},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true},
	note = {All Open Access, Bronze Open Access}
}

@ARTICLE{Antelmi2021,
	author = {Antelmi, Alessia and Cordasco, Gennaro and Spagnuolo, Carmine and Szufel, Przemysław},
	title = {Social influence maximization in hypergraphs},
	year = {2021},
	journal = {Entropy},
	volume = {23},
	number = {7},
	doi = {10.3390/e23070796},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85118377096&doi=10.3390%2fe23070796&partnerID=40&md5=194d6709104451cf1e4d591e5fbba4cb},
	abstract = {This work deals with a generalization of the minimum Target Set Selection (TSS) problem, a key algorithmic question in information diffusion research due to its potential commercial value. Firstly proposed by Kempe et al., the TSS problem is based on a linear threshold diffusion model defined on an input graph with node thresholds, quantifying the hardness to influence each node. The goal is to find the smaller set of items that can influence the whole network according to the diffusion model defined. This study generalizes the TSS problem on networks characterized by many-to-many relationships modeled via hypergraphs. Specifically, we introduce a linear threshold diffusion process on such structures, which evolves as follows. Let H = (V, E) be a hypergraph. At the beginning of the process, the nodes in a given set S ⊆ V are influenced. Then, at each iteration, (i) the influenced hyperedges set is augmented by all edges having a sufficiently large number of influenced nodes; (ii) consequently, the set of influenced nodes is enlarged by all the nodes having a sufficiently large number of already influenced hyperedges. The process ends when no new nodes can be influenced. Exploiting this diffusion model, we define the minimum Target Set Selection problem on hypergraphs (TSSH). Being the problem NP-hard (as it generalizes the TSS problem), we introduce four heuristics and provide an extensive evaluation on real-world networks. © 2021 by the authors. Licensee MDPI, Basel, Switzerland.},
	author_keywords = {High-order networks; Hypergraphs; Influence diffusion; Social networks; Target set selection},
	publisher = {MDPI},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true},
	note = {All Open Access, Green Open Access}
}

@ARTICLE{Cordasco2012460,
	author = {Cordasco, Gennaro and De Chiara, Rosario and Mancuso, Ada and Mazzeo, Dario and Scarano, Vittorio and Spagnuolo, Carmine},
	title = {A framework for distributing agent-based simulations},
	year = {2012},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {7155 LNCS},
	number = {PART 1},
	pages = {460 – 470},
	doi = {10.1007/978-3-642-29737-3_51},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878637675&doi=10.1007%2f978-3-642-29737-3_51&partnerID=40&md5=8eb9e8667a13b1f00429ac16ee171dc8},
	abstract = {Agent-based simulation models are an increasingly popular tool for research and management in many, different and diverse fields. In executing such simulations the "speed" is one of the most general and important issues. The traditional answer to this issue is to invest resources in deploying a dedicated installation of dedicated computers. In this paper we present a framework that is a parallel version of the Mason, a library for writing and running Agent-based simulations. © 2012 Springer-Verlag Berlin Heidelberg.},
	author_keywords = {Agent-based simulation; Distributed Systems; Heterogeneous Computing; Load-Balancing},
	keywords = {Distributed database systems; Resource allocation; Agent based simulation; Agent-based simulation models; Dedicated computers; Distributed systems; Diverse fields; Heterogeneous computing; Parallel version; Running agents; Distributed computer systems},
	publisher = {Springer Verlag},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true},
	note = {All Open Access, Bronze Open Access}
}

@INPROCEEDINGS{Pellegrino2023,
	author = {Pellegrino, Maria Angela and Cordasco, Gennaro and Scarano, Vittorio and Spagnuolo, Carmine},
	title = {Sustainable, Secure, and Smart Collaboration (S3C)},
	year = {2023},
	journal = {ACM International INPROCEEDINGS Proceeding Series},
	doi = {10.1145/3605390.3610812},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85173709307&doi=10.1145%2f3605390.3610812&partnerID=40&md5=6b0ce14d42ee2812ae68d994d1cec644},
	abstract = {We live in an increasingly interconnected world, where collaboration is the order of the day, stimulating the transition to a more sustainable society. This workshop focuses on sustainable and smart collaboration, which might also take place in virtual and remote settings. While the virtual environment represents a step forward in breaking down geographical and social barriers, they require to deal carefully with security concerns. In this context, the Sustainable, Secure, and Smart Collaboration (S3C) workshop is meant to connect researchers, industries, educators, and technologists related to Human-computer Interaction (HCI) blended with immersive systems, smart cities, and security awareness which can take advantage of the collaboration. It resulted in the presentation of 6 contributions proposed by researchers and companies all around Europe, exploiting collaboration to guarantee learners' engagement, security awareness, and smart solution design. The contributions confirm the pervasive role of collaboration that has the potential to improve human interaction in the presence or remotely.  © 2023 ACM.},
	keywords = {Sustainable development; Virtual reality; Breakings; Humaninteraction; Immersive System; Remote settings; Security awareness; Smart solutions; Solution designs; Sustainable society; Human computer interaction},
	publisher = {Association for Computing Machinery},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true},
	note = {All Open Access, Bronze Open Access}
}

@ARTICLE{Luke201975,
	author = {Luke, Sean and Simon, Robert and Crooks, Andrew and Wang, Haoliang and Wei, Ermo and Freelan, David and Spagnuolo, Carmine and Scarano, Vittorio and Cordasco, Gennaro and Cioffi-Revilla, Claudio},
	title = {The MASON Simulation Toolkit: Past, Present, and Future},
	year = {2019},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	volume = {11463 LNAI},
	pages = {75 – 86},
	doi = {10.1007/978-3-030-22270-3_6},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85068334008&doi=10.1007%2f978-3-030-22270-3_6&partnerID=40&md5=3447b24a955f9d29b2110a0862bc69e8},
	abstract = {MASON is a widely-used open-source agent-based simulation toolkit that has been in constant development since 2002. MASON’s architecture was cutting-edge for its time, but advances in computer technology now offer new opportunities for the ABM community to scale models and apply new modeling techniques. We are extending MASON to provide these opportunities in response to community feedback. In this paper we discuss MASON, its history and design, and how we plan to improve and extend it over the next several years. Based on user feedback will add distributed simulation, distributed GIS, optimization and sensitivity analysis tools, external language and development environment support, statistics facilities, collaborative archives, and educational tools. © 2019, Springer Nature Switzerland AG.},
	author_keywords = {Agent-based simulation; Library; Open source},
	keywords = {Computer simulation languages; Libraries; Sensitivity analysis; Agent based simulation; Computer technology; Development environment; Distributed simulations; Educational tools; Modeling technique; Open sources; Simulation toolkits; Multi agent systems},
	publisher = {Springer Verlag},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@ARTICLE{Antelmi2023,
	author = {Antelmi, Alessia and Cordasco, Gennaro and Polato, Mirko and Scarano, Vittorio and Spagnuolo, Carmine and Yang, Dingqi},
	title = {A Survey on Hypergraph Representation Learning},
	year = {2023},
	journal = {ACM Computing Surveys},
	volume = {56},
	number = {1},
	doi = {10.1145/3605776},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85172393798&doi=10.1145%2f3605776&partnerID=40&md5=c9fa8ddc69d17c48c1e4b10d4d2703ce},
	abstract = {Hypergraphs have attracted increasing attention in recent years thanks to their flexibility in naturally modeling a broad range of systems where high-order relationships exist among their interacting parts. This survey reviews the newly born hypergraph representation learning problem, whose goal is to learn a function to project objects - most commonly nodes - of an input hyper-network into a latent space such that both the structural and relational properties of the network can be encoded and preserved. We provide a thorough overview of existing literature and offer a new taxonomy of hypergraph embedding methods by identifying three main families of techniques, i.e., spectral, proximity-preserving, and (deep) neural networks. For each family, we describe its characteristics and our insights in a single yet flexible framework and then discuss the peculiarities of individual methods, as well as their pros and cons. We then review the main tasks, datasets, and settings in which hypergraph embeddings are typically used. We finally identify and discuss open challenges that would inspire further research in this field.  © 2023 Copyright held by the owner/author(s). Publication rights licensed to ACM.},
	author_keywords = {hypergraph attention; hypergraph convolution; hypergraph embedding; hypergraph neural networks; Hypergraph representation learning},
	keywords = {Convolution; Embeddings; Hyper graph; Hypergraph attention; Hypergraph convolution; Hypergraph embedding; Hypergraph neural network; Hypergraph representation learning; Hypergraph representations; Neural-networks; Embeddings},
	publisher = {Association for Computing Machinery},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true},
	note = {All Open Access, Bronze Open Access},
	selected={true},
	abbr={CURS},
	sjr = {<a href="https://www.scimagojr.com/journalsearch.php?q=23038&amp;tip=sid&amp;exact=no" title="SCImago Journal &amp; Country Rank"><img border="0" src="https://www.scimagojr.com/journal_img.php?id=23038" alt="SCImago Journal &amp; Country Rank"  /></a>},
}

@article{antelmi2024,
   title = {Reliable and Efficient Agent-Based Modeling and Simulation},
   author = {Antelmi, Alessia and Caramante, Pasquale and Cordasco, Gennaro and D'Ambrosio, Giuseppe and De Vinco, Daniele and Foglia, Francesco and Postiglione, Luca and Spagnuolo, Carmine},
   journal = {Journal of Artificial Societies and Social Simulation},
   ISSN = {1460-7425},
   volume = {27},
   number = {2},
   pages = {4},
   year = {2024},
   bibtex_show={true},
   URL = {http://jasss.soc.surrey.ac.uk/27/2/4.html},
   DOI = {10.18564/jasss.5300},
    abstract = {Agent-based models represent a primary methodology to untangle and study complex systems. Over the last decade, the need for more elaborate computing-demanding models gave rise to many frameworks and tools to run ABM simulations. Current state-of-the-art ABM tools either focus on ease of use, performance, or a trade-off between these two elements. Still, efficiency-oriented solutions (required for both large and small-scale simulations) are vulnerable to memory flaws which could invalidate the experiment results. This work aims to merge efficiency, reliability, and safeness under an innovative ABM software framework based on the Rust programming language. Our framework, krABMaga, is an open-source library that offers a high-level environment by exploiting metaprogramming and expandable visualization features. We equipped our library with a dynamic simulation monitoring system and model exploration and optimization capabilities over parallel, distributed, and cloud architectures. After having presented the overall architecture and functionalities of krABMaga, we discuss a performance comparison of our framework against the mostly adopted ABM software and the scalability potential of our simulation engine on a model calibration experiment running over an AWS EC2 virtual cluster machine. All code and examples models are available on GitHub.},
   selected={true},
	abbr={JASSS},
	sjr = {<a href="https://www.scimagojr.com/journalsearch.php?q=23038&amp;tip=sid&amp;exact=no" title="SCImago Journal &amp; Country Rank"><img border="0" src="https://www.scimagojr.com/journal_img.php?id=15591" alt="SCImago Journal &amp; Country Rank"  /></a>},
  }		
@inproceedings{10.1145/3630744.3658418,
author = {De Vinco, Daniele and Antelmi, Alessia and Spagnuolo, Carmine and Aiello, Luca Maria},
title = {Deciphering Conversational Networks: Stance Detection via Hypergraphs and LLMs},
year = {2024},
isbn = {9798400704536},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3630744.3658418},
doi = {10.1145/3630744.3658418},
abstract = {Understanding the structural and linguistic properties of conversational data in social media is crucial for extracting meaningful insights to understand opinion dynamics, (mis-)information spreading, and the evolution of harmful behavior. Current state-of-the-art mathematical frameworks, such as hypergraphs and linguistic tools, such as large language models (LLMs), offer robust methodologies for modeling high-order group interactions and unprecedented capabilities for dealing with natural language-related tasks. In this study, we propose an innovative approach that blends these worlds by abstracting conversational networks via hypergraphs and analyzing their dynamics through LLMs. Our aim is to enhance the stance detection task by incorporating the high-order interactions naturally embedded within a conversation, thereby enriching the contextual understanding of LLMs regarding the intricate human dynamics underlying social media data.},
booktitle = {Companion Publication of the 16th ACM Web Science Conference},
pages = {3–4},
numpages = {2},
 bibtex_show={true},
keywords = {Conversational networks, LLMs, hypergraphs, stance detection},
location = {Stuttgart, Germany},
series = {Websci Companion '24}
}

@CONFERENCE{De Vinco20243,
	author = {De Vinco, Daniele and Antelmi, Alessia and Spagnuolo, Carmine and Aiello, Luca Maria},
	title = {Deciphering Conversational Networks: Stance Detection via Hypergraphs and LLMs},
	year = {2024},
	journal = {Companion Proceedings of the 16th ACM  Web Science Conference, Websci Companion 2024 - Reflecting on the Web, AI and Society},
	pages = {3 – 4},
	doi = {10.1145/3630744.3658418},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85197133742&doi=10.1145%2f3630744.3658418&partnerID=40&md5=0aa64deb4f0c5e26bf0646e829eeeea8},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	 bibtex_show={true}
}


@ARTICLE{Cordasco2018151,
	author = {Cordasco, Gennaro and D’Auria, Matteo and Spagnuolo, Carmine and Scarano, Vittorio},
	title = {Heterogeneous Scalable Multi-languages Optimization via Simulation},
	year = {2018},
	journal = {Communications in Computer and Information Science},
	volume = {946},
	pages = {151 – 167},
	doi = {10.1007/978-981-13-2853-4_13},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85055640657&doi=10.1007%2f978-981-13-2853-4_13&partnerID=40&md5=dccf437c26fd200dedbc90ab72c747bd},
	abstract = {Scientific Computing (SC) is a multidisciplinary field that uses the computational approach to understand and study complex artificial and natural systems belonging many scientific sectors. Optimization via Simulation (OvS) is a fast developing area in SC field. OvS combines classical optimization algorithms and stochastic simulations to face problems with unknown and/or dynamic data distribution. We present Heterogeneous Simulation Optimization (HSO), an architecture that enable to distribute the OvS process on an Heterogeneous Computing systems. HSO is designed according to two levels of heterogeneity: hardware heterogeneity, that is the ability to exploit the computational power of several general-purpose CPUs and/or hardware accelerators such as Graphics Processing Units (GPUs); programming languages heterogeneity, that is the capability to develop the OvS methodology combining different programming languages such as C++, C, Clojure, Erlang, Go, Haskel, Java, Node.js, Objective-C, PHP, Python, Scala and many others. The proposed HSO architecture has been fully developed and is available on a public GitHub repository. We have validated and tested the scalability of HSO developing two different use cases that show both the levels of heterogeneity, and showing how to exploit Optimal Computing Budget Allocation (OCBA) algorithm and a Genetic Algorithm in a OvS process. © 2018, Springer Nature Singapore Pte Ltd.},
	author_keywords = {GPU Computing; Heterogeneous computing; Multi agent-based simulation; Optimization; Parallel computing; Simulation via optimization},
	keywords = {Budget control; Computer graphics; Genetic algorithms; Graphics processing unit; Hardware; Multi agent systems; Optimization; Parallel processing systems; Program processors; Stochastic models; Stochastic systems; Classical optimization; GPU computing; Heterogeneous computing; Heterogeneous computing system; Heterogeneous simulation; Multi agent based simulations; Optimal computing budget allocation; Stochastic simulations; C++ (programming language)},
	publisher = {Springer Verlag},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@INPROCEEDINGS{Ozik2016206,
	author = {Ozik, Jonathan and Collier, Nicholson T. and Wozniak, Justin M. and Spagnuolo, Carmine},
	title = {From desktop to large-scale model exploration with swift/T},
	year = {2016},
	journal = {Proceedings - Winter Simulation INPROCEEDINGS},
	volume = {0},
	pages = {206 – 220},
	doi = {10.1109/WSC.2016.7822090},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85014201500&doi=10.1109%2fWSC.2016.7822090&partnerID=40&md5=d40e347ef2853216e1931b1ab922a117},
	abstract = {As high-performance computing resources have become increasingly available, new modes of computational processing and experimentation have become possible. This tutorial presents the Extreme-scale Model Exploration with Swift/T (EMEWS) framework for combining existing capabilities for model exploration approaches (e.g., model calibration, metaheuristics, data assimilation) and simulations (or any "black box" application code) with the Swift/T parallel scripting language to run scientific workflows on a variety of computing resources, from desktop to academic clusters to Top 500 level supercomputers. We will present a number of use-cases, starting with a simple agent-based model parameter sweep, and ending with a complex adaptive parameter space exploration workflow coordinating ensembles of distributed simulations. The use-cases are published on a public repository for interested parties to download and run on their own. © 2016 IEEE.},
	keywords = {Computational methods; Space research; Supercomputers; Adaptive parameters; Computational processing; Distributed simulations; High-performance computing resources; Large-scale modeling; Public repositories; Scientific workflows; Scripting languages; Autonomous agents},
	publisher = {Institute of Electrical and Electronics Engineers Inc.},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true},
	note = {All Open Access, Green Open Access},
	abbr={WSC},
	sjr = {<a href="https://img.shields.io/badge/Core'23-B-green.svg"><img border="0" src="https://img.shields.io/badge/Core'23-B-green.svg" alt="Core'23-B"  /></a>},
}

@ARTICLE{Antelmi2021140938,
	author = {Antelmi, Alessia and Cordasco, Gennaro and Scarano, Vittorio and Spagnuolo, Carmine},
	title = {Modeling and Evaluating Epidemic Control Strategies with High-Order Temporal Networks},
	year = {2021},
	journal = {IEEE Access},
	volume = {9},
	pages = {140938 – 140964},
	doi = {10.1109/ACCESS.2021.3119459},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85117271030&doi=10.1109%2fACCESS.2021.3119459&partnerID=40&md5=232fb6a08035e13b637dafa7956546c8},
	abstract = {Non-Pharmaceutical Interventions (NPIs) are essential measures that reduce and control a severe outbreak or a pandemic, especially in the absence of drug treatments. However, estimating and evaluating their impact on society remains challenging, considering the numerous and closely tied aspects to examine. This article proposes a fine-grain modeling methodology for NPIs, based on high-order relationships between people and environments, mimicking direct and indirect contagion pathways over time. After assessing the ability of each intervention in controlling an epidemic propagation, we devise a multi-objective optimization framework, which, based on the epidemiological data, calculates the NPI combination that should be implemented to minimize the spread of an epidemic as well as the damage due to the intervention. Each intervention is thus evaluated through an agent-based simulation, considering not only the reduction in the fraction of infected but also to what extent its application damages the daily life of the population. We run experiments on three data sets, and the results illustrate how the application of NPIs should be tailored to the specific epidemic situation. They further highlight the critical importance of correctly implementing personal protective (e.g., using face masks) and sanitization measures to slow down a pathogen spreading, especially in crowded places.  © 2013 IEEE.},
	author_keywords = {Agent-based modeling; complex networks; epidemic; high-order relationships; hypergraphs; non-pharmaceutical interventions},
	keywords = {Autonomous agents; Biological systems; Complex networks; Controlled drug delivery; Disease control; Multiobjective optimization; Agent-based model; Biological system modeling; Context models; High-order; High-order relationship; Higher-order; Hyper graph; Non-pharmaceutical interventions; Pandemic; Social networking (online); Computational methods},
	publisher = {Institute of Electrical and Electronics Engineers Inc.},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true},
	note = {All Open Access, Gold Open Access},
	selected={true},
	abbr={ACCESS},
	sjr = {<a href="https://www.scimagojr.com/journalsearch.php?q=21100374601&amp;tip=sid&amp;exact=no" title="SCImago Journal &amp; Country Rank"><img border="0" src="https://www.scimagojr.com/journal_img.php?id=21100374601" alt="SCImago Journal &amp; Country Rank"  /></a>},
}

@INPROCEEDINGS{Antelmi202061,
	author = {Antelmi, Alessia and Cordasco, Gennaro and Spagnuolo, Carmine and Scarano, Vittorio},
	title = {A design-methodology for epidemic dynamics via time-varying hypergraphs},
	year = {2020},
	journal = {Proceedings of the International Joint INPROCEEDINGS on Autonomous Agents and Multiagent Systems, AAMAS},
	volume = {2020-May},
	pages = {61 – 69},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85096648502&partnerID=40&md5=e3c65524a0e801fcf4224635406e0bed},
	abstract = {In epidemiology science, the importance to explore innovative modeling tools for acutely analyzing epidemic diffusion is turning into a big challenge considering the myriad of real-world aspects to capture. Typically, equation-based models, such as SIS and SIR, are used to study the propagation of diseases over a population. Improved approaches also include human-mobility patterns as network information to describe contacts among individuals. However, there still is the need to incorporate in these models information about different types of contagion, geographical information, humans habits, and environmental properties. In this paper, we propose a novel approach that takes into account: 1. direct and indirect epidemic contagion pathways to explore the dynamics of the epidemic, 2. the times of possible contagions, and 3. human-mobility patterns. We combine these three features exploiting time-varying hypergraphs, and we embed this model into a design-methodology for agent-based models (ABMs), able to improve the correctness in the epidemic estimations of classical contact-network approaches. We further describe a diffusion algorithm suitable for our design-methodology and adaptable to the peculiarities of any disease spreading policies and/or models. Finally, we tested our methodology by developing an ABM, realizing the SIS epidemic compartmental model, for simulating an epidemic propagation over a population of individuals. We experimented the model using real user-mobility data from the location-based social network Foursquare, and we demonstrated the high-impact of temporal direct and indirect contagion pathways. © 2020 International Foundation for Autonomous.},
	author_keywords = {Agent-based Model; Direct and indirect infection; Epidemiology; Location-based Social Network; Time-Varying Hypergraph},
	keywords = {Computational methods; Design; Epidemiology; Graph theory; Multi agent systems; Compartmental model; Diffusion algorithm; Environmental property; Epidemic propagation; Equation-based models; Geographical information; Location-based social networks; Network information; Autonomous agents},
	publisher = {International Foundation for Autonomous Agents and Multiagent Systems (IFAAMAS)},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true},
	selected={true},
	abbr={AAMAS},
	sjr = {<a href="https://portal.core.edu.au/conf-ranks/922/"><img border="0" src="https://img.shields.io/badge/Core'23-A*-blue.svg" alt="Core'23-A*"  /></a>},

}

@INPROCEEDINGS{Addone2022,
	author = {Addone, Agnese and Scarano, Vittorio and Spagnuolo, Carmine},
	title = {Towards a collaborative taxonomy of Tools, Languages and Environments in K-12 Computing Education},
	year = {2022},
	journal = {Proceedings - Frontiers in Education INPROCEEDINGS, FIE},
	volume = {2022-October},
	doi = {10.1109/FIE56618.2022.9962683},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85143803715&doi=10.1109%2fFIE56618.2022.9962683&partnerID=40&md5=0e6af1a9aa5daf91d5d3fc8547601e2f},
	abstract = {In this Work-in-Progress paper we present a preliminary study and the design of a taxonomy of Tools, Languages and Environments (TLE) employed in K-12 Computing Education, in schools and outreach programs. The research provides an analytical classification model based on a survey of TLEs and on previous related works. It also outlines the collaborative protocol that will allow researchers to share the results of the taxonomy on a public repository. An analysis of the most common platforms where contributors can work collaboratively is presented to show the qualitative process of identification and choice of GitHub as the most reliable one. © 2022 IEEE.},
	author_keywords = {Bloom's taxonomy; Computer Science; Course assessment; K-12; Learning environment; Online repositories; Outreach; Rubric; User centered design},
	keywords = {Computer aided instruction; Curricula; E-learning; Education computing; Taxonomies; Bloom taxonomies; Course assessment; K-12; K-12 computing education; Learning environments; Online repositories; Outreach; Outreach programs; Rubric; School project; User centered design},
	publisher = {Institute of Electrical and Electronics Engineers Inc.},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@ARTICLE{Cordasco2021,
	author = {Cordasco, Gennaro and D'Auria, Matteo and Negro, Alberto and Scarano, Vittorio and Spagnuolo, Carmine},
	title = {Toward a domain-specific language for scientific workflow-based applications on multicloud system},
	year = {2021},
	journal = {Concurrency and Computation: Practice and Experience},
	volume = {33},
	number = {18},
	doi = {10.1002/cpe.5802},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85084203343&doi=10.1002%2fcpe.5802&partnerID=40&md5=9e1dbdc0d513dd87a40e02f86b9a096c},
	abstract = {The cloud computing paradigm has emerged as the backbone of modern price-aware scalable computing systems. Many cloud service models are competing to become the leading doorway to access the computational power of cloud providers. Recently, a novel service model, called function-as-a-service (FaaS), has been proposed, which enables users to exploit the cloud computational scalability, left out the configuration and management of huge computing infrastructures. This article discloses Fly, a domain-specific language, which aims at reconciling cloud and high-performance computing paradigms adopting a multicloud strategy by providing a powerful, effective, and pricing-efficient tool for developing scalable workflow-based scientific applications by exploiting different and at the same time FaaS cloud providers as computational backends in a transparent fashion. We present several improvements of the Fly language, as well as a new enhanced version of a source-to-source compiler, which currently supports Symmetric Multiprocessing, Amazon AWS, and Microsoft Azure backends and translation of functions in Java, JavaScript, and Python programming languages. Furthermore, we discuss a performance evaluation of Fly on a popular benchmark for distributed computing frameworks, along with a collection of case studies with an analysis of their performance results and costs. © 2020 John Wiley & Sons, Ltd.},
	author_keywords = {distributed computing; domain-specific languages; functions as a service; parallel computing; scientific computing; serverless computing; workflow-based application},
	keywords = {Benchmarking; Problem oriented languages; Program compilers; Program translators; Windows operating system; Computational scalability; Computing infrastructures; Configuration and managements; Distributed computing frameworks; Domain specific languages; High performance computing; Python programming language; Symmetric multi processing; Infrastructure as a service (IaaS)},
	publisher = {John Wiley and Sons Ltd},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@INPROCEEDINGS{De Donato201792,
	author = {De Donato, Renato and Malandrino, Delfina and Palmieri, Giuseppina and Petta, Andrea and Pirozzi, Donato and Scarano, Vittorio and Serra, Luigi and Spagnuolo, Carmine and Vicidomini, Luca and Cordasco, Gennaro},
	title = {DatalEt-ecosystem provider (DEEP): Scalable architecture for reusable, portable and user-friendly visualizations of open data},
	year = {2017},
	journal = {Proceedings of the 7th International INPROCEEDINGS for E-Democracy and Open Government, CeDEM 2017},
	pages = {92 – 101},
	doi = {10.1109/CeDEM.2017.14},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85032816516&doi=10.1109%2fCeDEM.2017.14&partnerID=40&md5=c0365b3852eb60459c886d72a248cb46},
	abstract = {This paper presents the DatalEt-Ecosystem Provider (DEEP), an extensible, and scalable Edge-centric architecture to visualize Open Data, retrieved in real time from institutional open data portals. The aim is to engage citizens and stakeholders through reusable, portable and interactive visualizations, named datalets. The DEEP architecture exploits the increasing computing power and capacity of end-users devices, moving the computation to process and visualize data, from the central server, directly to the client-side ensuring data trustiness, privacy, scalability and dynamic data loading. DEEP and its datalets have been fully exploited, in the ROUTE-TO-PA, HORIZON 2020 funded project, by five public administrations across Europe as pilot projects. The project engages and involves citizens in creating, sharing and commenting existing visualizations of Open Data. DEEP is open source, its source code is fully available on GitHub, thus every single component can be reused by other projects. © 2017 IEEE.},
	author_keywords = {Collaboration; E-partecipation; Open data; Social platform; Visualization of open data},
	keywords = {Architecture; Ecology; Ecosystems; Human computer interaction; Open source software; Open systems; Public administration; Visualization; Collaboration; Computing power; Deep architectures; Interactive visualizations; Open datum; Scalable architectures; Single components; Social platform; Data visualization},
	publisher = {Institute of Electrical and Electronics Engineers Inc.},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@INPROCEEDINGS{Scarano2016,
	author = {Scarano, Vittorio and Cordasco, Gennaro and Lettieri, Nicola and Malandrino, Delfina and Manno, Ilaria and Palmieri, Giuseppina and Petta, Andrea and Pirozzi, Donato and Rizzolo, Diletta and Serra, Luigi and Spagnuolo, Carmine and Vicidomini, Luca},
	title = {Fostering transparency and participation in the data-based society: A sustainable architecture for a social platform for Open Data},
	year = {2016},
	journal = {eChallenges e-2015 INPROCEEDINGS Proceedings},
	doi = {10.1109/eCHALLENGES.2015.7441082},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84992247508&doi=10.1109%2feCHALLENGES.2015.7441082&partnerID=40&md5=0a2558ec0a5944d5bf10d8499f36580c},
	abstract = {This paper focuses on innovative solutions to the problem of transparency in Public Administrations (PAs) by opening up public data and services so that citizens participation is facilitated and encouraged. We introduce the motivating principles and the architectural solutions to a Social Platform for Open Data, that is designed in order to provide a sustainable and re-usable framework to provide collaborative and social access to Open Data provided by PAs. Our overall objective is to propose a engage citizens by making them able to socially interact over Open Data, by forming or joining existing online communities that share common interest and discuss common issues of relevance to local policy, service delivery, and regulation. The proposed architectural solution is supporting the citizens in a collective relationship among them (as a network helping each other) and with PAs so that the information provided by the Public Administrations is shared, interpreted, personalized, made easier to understand and discussed to assess its meanings. The results and benefits of our approach, as well as potential impact in the pilot experiences that are planned, are also discussed. © 2015 IIMC.},
	keywords = {Transparency; Architectural solutions; Common interests; Innovative solutions; Local policies; On-line communities; Potential impacts; Service delivery; Sustainable architecture; Public administration},
	publisher = {Institute of Electrical and Electronics Engineers Inc.},
	type = {INPROCEEDINGS paper},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}

@ARTICLE{Cordasco20131236,
	author = {Cordasco, Gennaro and de Chiara, Rosario and Mancuso, Ada and Mazzeo, Dario and Scarano, Vittorio and Spagnuolo, Carmine},
	title = {Bringing together efficiency and effectiveness in distributed simulations: The experience with D-Mason},
	year = {2013},
	journal = {SIMULATION},
	volume = {89},
	number = {10},
	pages = {1236 – 1253},
	doi = {10.1177/0037549713489594},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887120392&doi=10.1177%2f0037549713489594&partnerID=40&md5=cbe2c2a0915a3ed5958735e092268d3d},
	abstract = {Agent-based simulation models are an increasingly popular tool for research and management in many fields. In executing such simulations “speed” is one of the most general and important issues because of the size and complexity of simulations. But another important issue is the effectiveness of the solution, which consists of how easily usable and portable the solutions are for the users, i.e. the programmers of the distributed simulation. Our study, then, is aimed at efficient and effective distribute simulations by adopting a framework-level approach, with our design and implementation of a framework, D-Mason, which is a parallel version of the Mason library for writing and running simulations of agent-based simulation models. In particular, besides the efficiency due to workload distribution with small overhead, D-Mason at a framework level proves itself effective since it enables the scientists that use the framework (domain expert but with limited knowledge of distributed programming) only minimally aware of the fact that the simulation is running on a distributed environment. Then, we present tests that compare D-Mason against Mason in order to assess the improved scalability and D-Mason capability to exploit heterogeneous distributed hardware. Our tests also show that several massive simulations that are impossible to execute on Mason (e.g. because of CPU and/or memory requirements) can be easily performed using D-Mason. © 2013, The Society for Modeling and Simulation International. All rights reserved.},
	author_keywords = {Agent-based simulation; distributed Systems; load-balancing; performance evaluation; visualization of distributed models},
	keywords = {Circuit simulation; Agent based simulation; Distributed systems; Load-Balancing; performance evaluation; Visualization of distributed models; Software engineering},
	type = {Article},
	publication_stage = {Final},
	source = {Scopus},
	bibtex_show={true}

}