@article{pop00025,
abstract = {Cloud Computing is widely recognized as distributed computing paradigm for the next generation of dynamically scalable applications. Recently a novel service model, called Function-as-a-Service (FaaS), has been proposed, that enables users to exploit the computational power of cloud infrastructures, without the need to configure and manage complex computations systems. FaaS paradigm represents an opportunity to easily develop and execute extreme-scale applications as it allows fine-grain decomposition of the application with a much more efficient scheduling on cloud provider infrastructure. We introduce fly, a domain-specific language for designing, deploying and executing scientific computing applications by exploiting the FaaS service model on different cloud infrastructures. In this paper, we present the design and the language definition of fly on several computing (local and FaaS) back-ends: Symmetric multiprocessing (SMP), Amazon AWS Lambda, Microsoft Azure Functions, Google Cloud Functions, and IBM Bluemix/Apache OpenWhisk. We also present the first fly source-to-source compiler, publicly available on GitHub, which supports SMP and AWS back-ends.},
annote = {Query date: 2020-09-08 12:44:09},
author = {Cordasco, Gennaro and D'Auria, Matteo and Negro, Alberto and Scarano, Vittorio and Spagnuolo, Carmine},
doi = {10.1007/978-3-030-48340-1_41},
isbn = {9783030483395},
issn = {16113349},
journal = {1st International Workshop on Parallel Programming Models in High-Performance Cloud (ParaMo). Proceedings European Conference on Parallel Processing Workshops},
keywords = {Distributed computing,Domain-Specific Languages,Functions as a Service (FaaS),Parallel computing,Scientific computing,Serverless computing},
pages = {531--544},
publisher = {Springer},
title = {{FLY: A Domain-Specific Language for Scientific Computing on FaaS}},
url = {https://link.springer.com/chapter/10.1007/978-3-030-48340-1{\_}41},
volume = {11997 LNCS},
year = {2019}
}
