@article{pop00023,
abstract = {The cloud computing paradigm has emerged as the backbone of modern price-aware scalable computing systems. Many cloud service models are competing to become the leading doorway to access the computational power of cloud providers. Recently, a novel service model, called function-as-a-service (FaaS), has been proposed, which enables users to exploit the cloud computational scalability, left out the configuration and management of huge computing infrastructures. This article discloses Fly, a domain-specific language, which aims at reconciling cloud and high-performance computing paradigms adopting a multicloud strategy by providing a powerful, effective, and pricing-efficient tool for developing scalable workflow-based scientific applications by exploiting different and at the same time FaaS cloud providers as computational backends in a transparent fashion. We present several improvements of the Fly language, as well as a new enhanced version of a source-to-source compiler, which currently supports Symmetric Multiprocessing, Amazon AWS, and Microsoft Azure backends and translation of functions in Java, JavaScript, and Python programming languages. Furthermore, we discuss a performance evaluation of Fly on a popular benchmark for distributed computing frameworks, along with a collection of case studies with an analysis of their performance results and costs.},
annote = {Query date: 2020-09-08 12:44:09},
author = {Cordasco, Gennaro and D'Auria, Matteo and Negro, Alberto and Scarano, Vittorio and Spagnuolo, Carmine},
doi = {10.1002/cpe.5802},
issn = {15320634},
journal = {Concurrency Computation },
keywords = {distributed computing,domain-specific languages,functions as a service,parallel computing,scientific computing,serverless computing,workflow-based application},
publisher = {Wiley Online Library},
title = {{Toward a domain-specific language for scientific workflow-based applications on multicloud system}},
url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/cpe.5802},
year = {2020}
}
